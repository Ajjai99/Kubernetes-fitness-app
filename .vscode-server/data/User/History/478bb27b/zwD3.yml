apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: my-project
  name: api-server-deployment
  labels:
    app: api-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-server
  template:
    metadata:
      labels:
        app: api-server
    spec:
      containers:
      - name: api-server
        image: ajjai007/api-prod-server:2.0 
        ports:
        - containerPort: 5000
        env:
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password
        envFrom:
          - configMapRef:
              name: api-config

---
apiVersion: v1
kind: Secret
metadata:
  name: db-credentials
type: Opaque
data:
  password: cm9vdA==
  user: cm9vdA==

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: api-config
data:
  HOST : "mysql-service"

# ---
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: api-config
# data:
#   DATABASE_URI : "mysql://admin:kubetest123@k-database.caov0frusntt.us-east-1.rds.amazonaws.com/fitness"

---
apiVersion: v1
kind: Service
metadata:
  name: api-server-service
  namespace: my-project
spec:
  type: LoadBalancer
  externalIPs: ["34.227.18.120"]
  selector:
    app: api-server
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: my-project
  name: mysql-deployment
  labels:
    app: mysql-db
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mysql-db
  template:
    metadata:
      labels:
        app: mysql-db
    spec:
      containers:
      - name: mysql-db
        image: ajjai007/mysqlimage:1.0
        ports:
        - containerPort: 3306

---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
  namespace: my-project
spec:
  type: NodePort
  selector:
    app: mysql-db
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306 